// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BigInt.asUintN(n, a) is replaced 1`] = `
"import JSBI from \\"./jsbi.mjs\\";
const g = JSBI.BigInt(1);
JSBI.asUintN(10, g);"
`;

exports[`it works with AssignmentExpressions 1`] = `
"var _x, _y, _x2, _y2, _x3, _y3, _x4, _y4;

import JSBI from \\"./jsbi.mjs\\";
const o = {};
o.x = {};
o.x.y = JSBI.BigInt(1);
o.x.yz = JSBI.BigInt(1);
const y = 'y';
const z = 'z';
const b = JSBI.BigInt(1);
_x = o.x, _y = \\"y\\", _x[_y] = JSBI.add(_x[_y], b);
_x2 = o.x, _y2 = 'y', _x2[_y2] = JSBI.add(_x2[_y2], b);
_x3 = o.x, _y3 = y, _x3[_y3] = JSBI.add(_x3[_y3], b);
_x4 = o.x, _y4 = y + z, _x4[_y4] = JSBI.add(_x4[_y4], b);"
`;

exports[`it works with UpdateExpression 1`] = `
"
var _x, _y, _x2, _y2, _x3, _y3, _x4, _y4, _x5, _y5, _x6, _y6, _x7, _y7, _x8, _y8, _x9, _y9, _z, _x10, _y10, _z2, _x11, _y11, _z3, _x12, _y12, _z4;

import JSBI from \\"./jsbi.mjs\\";
const o = {};
o.x = {};
o.x.y = JSBI.BigInt(1);
o.x.yz = JSBI.BigInt(1);
const y = 'y';
const z = 'z';
const b = JSBI.BigInt(1);
_x = o.x, _y = \\"y\\", _x[_y] = JSBI.add(_x[_y], b);
_x2 = o.x, _y2 = 'y', _x2[_y2] = JSBI.add(_x2[_y2], b);
_x3 = o.x, _y3 = y, _x3[_y3] = JSBI.add(_x3[_y3], b);
_x4 = o.x, _y4 = y + z, _x4[_y4] = JSBI.add(_x4[_y4], b);
_x5 = o.x, _y5 = \\"y\\", _x5[_y5] = JSBI.add(_x5[_y5], JSBI.BigInt(1));
_x6 = o.x, _y6 = 'y', _x6[_y6] = JSBI.add(_x6[_y6], JSBI.BigInt(1));
_x7 = o.x, _y7 = y, _x7[_y7] = JSBI.add(_x7[_y7], JSBI.BigInt(1));
_x8 = o.x, _y8 = y + z, _x8[_y8] = JSBI.add(_x8[_y8], JSBI.BigInt(1));
_x9 = o.x, _y9 = \\"y\\", _z = _x9[_y9], _x9[_y9] = JSBI.add(_z, JSBI.BigInt(1)), _z;
_x10 = o.x, _y10 = 'y', _z2 = _x10[_y10], _x10[_y10] = JSBI.add(_z2, JSBI.BigInt(1)), _z2;
_x11 = o.x, _y11 = y, _z3 = _x11[_y11], _x11[_y11] = JSBI.add(_z3, JSBI.BigInt(1)), _z3;
_x12 = o.x, _y12 = y + z, _z4 = _x12[_y12], _x12[_y12] = JSBI.add(_z4, JSBI.BigInt(1)), _z4;"
`;

exports[`non-strict comparisions are not changed 1`] = `
"import JSBI from \\"./jsbi.mjs\\";
const g = JSBI.BigInt(1);

if (g == 1) {
  console.log(g);
}

if (g != 1) {
  console.log(g);
}

if (g < 1) {
  console.log(g);
}

if (g > 1) {
  console.log(g);
}

if (g <= 1) {
  console.log(g);
}

if (g >= 1) {
  console.log(g);
}"
`;

exports[`works 1`] = `
"import JSBI from \\"./jsbi.mjs\\";

function f() {
  const x = JSBI.BigInt(1);
  return JSBI.add(x, x);
}"
`;

exports[`works when type of variable is changed 1`] = `
"import JSBI from \\"./jsbi.mjs\\";
let g1 = 1;
g1 = JSBI.BigInt(1);

if (JSBI.equal(g1, JSBI.BigInt(1))) {
  console.log(g1);
}"
`;
